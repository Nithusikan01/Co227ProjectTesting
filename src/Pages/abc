import React, { useEffect, useState } from "react";
import axios from "axios";
import "./PastStaffEdit.css";
import { useNavigate, useParams } from "react-router-dom";

const PastStaffEdit = () => {
  const navigate = useNavigate();
  const { id } = useParams();

  const [formData, setFormData] = useState({
    name: "",
    qualifications: "",
    department: "",
    mobilePhone: "",
    telePhone: "",
    roleInFaculty: "",
    roleOnEEUWebsite: "",
    image: null, // Add a state for the image
  });

  const handleChange = (e) => {
    const { name, value } = e.target;

    setFormData((prevData) => ({
      ...prevData,
      [name]: value,
    }));
  };

  const handleImageChange = (e) => {
    const file = e.target.files[0];
    setFormData((prevData) => ({
      ...prevData,
      image: file,
    }));
  };

  useEffect(() => {
    const loadStaff = async () => {
      try {
        const response = await axios.get(`http://localhost:8080/pastStaff/${id}`);
        setFormData((prevData) => ({
          ...prevData,
          ...response.data,
        }));
      } catch (error) {
        console.error("Error loading past staff:", error);
      }
    };

    loadStaff();
  }, [id]);

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const formDataWithImage = new FormData();
      formDataWithImage.append("name", formData.name);
      formDataWithImage.append("period", formData.period);
      formDataWithImage.append("roleOnEEUWebsite", formData.roleOnEEUWebsite);
      if (formData.image) {
        formDataWithImage.append("image", formData.image);
      }

      const response = await axios.put(
        `http://localhost:8080/pastStaff/${id}`,
        formDataWithImage
      );

      console.log(response.data);

      navigate('/PastStaffCRUD');
    } catch (error) {
      console.error("Error updating past staff:", error);
    }
  };

  return (
    <div className="pastStaff-form-container">
      <div className="pastStaff-form-inner-container border shadow">
        <div className="headings">
          <h3 style={{ textAlign: "center", fontFamily: "sans-serif" }}>
            Edit Past Staff
          </h3>
        </div>
        <br />

        <form onSubmit={handleSubmit} className="Edit-form" style={{ width: "90%", marginLeft: "5%" }}>
          <div className="content">
            <div className="mb-3">
              <label htmlFor="name" className="form-label">
                Name:
              </label>
              <input
                type="text"
                className="form-control"
                id="name"
                name="name"
                value={formData.name}
                onChange={handleChange}
                placeholder="Enter Name"
              />
            </div>

            <div className="mb-3">
              <label htmlFor="period" className="form-label">
                Period:
              </label>
              <input
                type="text"
                className="form-control"
                id="period"
                name="period"
                value={formData.period}
                onChange={handleChange}
                placeholder="Enter Period"
              />
            </div>

            <div className="mb-3">
              <label htmlFor="roleOnEEUWebsite" className="form-label">
                Role On EEU Website:
              </label>
              <input
                type="text"
                className="form-control"
                id="roleOnEEUWebsite"
                name="roleOnEEUWebsite"
                value={formData.roleOnEEUWebsite}
                onChange={handleChange}
                placeholder="Enter Role"
              />
            </div>

            {/* Add an input field for the image */}
            <div className="mb-3">
              <label htmlFor="image" className="form-label">
                Current Image:
              </label>
              {formData.image && (
                <img
                  src={URL.createObjectURL(formData.image)}
                  alt="Current"
                  className="img-thumbnail"
                />
              )}
            </div>

            <div className="mb-3">
              <label htmlFor="newImage" className="form-label">
                New Image:
              </label>
              <input
                type="file"
                className="form-control"
                id="newImage"
                name="newImage"
                accept="image/*"
                onChange={handleImageChange}
              />
            </div>

            <div className="mb-3">
              <button className="btn btn-primary" type="submit">
                Update Past Staff
              </button>
            </div>
          </div>
        </form>
      </div>
    </div>
  );
};

export default PastStaffEdit;
